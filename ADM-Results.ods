import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.regex.Pattern;
import java.util.regex.Matcher;
import java.util.LinkedList;

public class STP_Reader {

    public class Edge{

        private int start;
        private int end;
        private int weight;

        Edge( int start, int end, int weight ) {
            this.start = start;
            this.end = end;
            this.weight = weight;
        }

        public String toString()
        {
            return " " + start + " " + end + " " + weight;
        }
    }


    private int number_of_nodes;
    private int number_of_edges;
    private int number_of_terminals;
    
    private LinkedList<Integer> terminals;
    private LinkedList<Edge> edges;


    public STP_Reader(String filename) {

        File f = new File(filename);

        number_of_nodes = 0;
        number_of_edges = 0;
        number_of_terminals = 0;

        terminals = new LinkedList<Integer>();
        edges = new LinkedList<Edge>();


        Pattern edge_pattern = Pattern.compile("E\\s(\\d+)\\s(\\d+)\\s(\\d+)");
        Pattern terminal_pattern = Pattern.compile("T\\s(\\d+)");
                
        try {

            BufferedReader br = new BufferedReader(new FileReader(f));
            
            String line;
            
            while ((line = br.readLine()) != null) {
                Matcher em = edge_pattern.matcher(line);
                if( em.matches() ) {
                    Edge edge = new Edge( Integer.parseInt( em.group(1)), Integer.parseInt(em.group(2)), Integer.parseInt(em.group(3)));
                    edges.addLast(edge);
                    continue;
                }
                Matcher tm = terminal_pattern.matcher(line);
                if( tm.matches() ) {
                    terminals.addLast( Integer.parseInt(tm.group(1)) );
                    continue;                    
                }
                
            }    
            br.close();           
            
        } catch (FileNotFoundException e) {
            System.out.println("File not found");
        } catch (IOException e) {
            e.printStackTrace();
            System.out.println("IOexecption");
        }
        
    }

    public LinkedList<Edge> get_edges() {
        return edges;

    }

    public LinkedList<Integer> get_terminals() {
        return terminals;
    }

    public int get_number_of_nodes() {
        return number_of_nodes;
    }

    public int get_number_of_edges() {
        return number_of_edges;
    }

    public int get_number_of_terminals() {
        return number_of_terminals;
    }

    public static void  main(String[] args){
        
        STP_Reader reader = new STP_Reader( "alue2087.stp" );

        LinkedList<Edge> edges = reader.get_edges();
        LinkedList<Integer> terminals = reader.get_terminals();
        for( Edge edge : edges ) {
            System.out.println( edge.toString() );
        }
            
        for( Integer i : terminals ) {
            System.out.println( i );
        }

    }

}


